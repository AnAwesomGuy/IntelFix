import org.objectweb.asm.ClassReader
import org.objectweb.asm.ClassWriter

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://maven.fabricmc.net" }
        maven { url "https://repo.sleeping.town" }
    }
    dependencies {
        classpath "agency.highlysuspect:voldeloom:2.4"
        classpath 'org.ow2.asm:asm:9.7'
    }
}

apply plugin: "agency.highlysuspect.voldeloom"

java.toolchain.languageVersion = JavaLanguageVersion.of(11)
compileJava.options.release.set(6)

version = mod_version
archivesBaseName = 'intelfix'
group = 'net.anawesomguy.intelfix'

sourceSets {
    fake
    main.compileClasspath += fake.compileClasspath
}

dependencies {
    var forgeVer = "$minecraft_version-$forge_version"
    minecraft "com.mojang:minecraft:$minecraft_version"
    forge "net.minecraftforge:forge:$forgeVer:universal"
    mappings "net.minecraftforge:forge:$forgeVer:src@zip"
}

jar {
    manifest {
        attributes('FMLCorePlugin': 'net.anawesomguy.intelfix.IntelFixPlugin')
    }
}

tasks.withType(JavaCompile).configureEach {
    doLast {
        files(outputs.files).asFileTree.filter { it.name.endsWith '.class' }.each {
            def writer = new ClassWriter(0)
            new ClassReader(it.bytes).accept(writer, ClassReader.SKIP_DEBUG)
            it.bytes = writer.toByteArray()
        }
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

volde {
    runs {
        configureEach {
            property "legacy.debugClassLoading", "true"
            property "legacy.debugClassLoadingSave", "true"
            property "fml.log.level", "ALL"
        }
    }
}